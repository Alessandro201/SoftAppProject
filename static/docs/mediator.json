{
  "functions": [
    {
      "name": "getInfoGenes",
      "description": "Return a dictionary containing information on geneTable.",
      "rtype": "dictionary"
    },
    {
      "name": "getInfoDiseases",
      "description": "Return a dictionary containing information on diseaseTable.",
      "rtype": "dictionary"
    },
    {
      "name": "getInfo",
      "description": "Returns two dictionaries containing information on the two datasets.",
      "rtype": "tuple containing two dictionaries"
    },
    {
      "name": "getDiseaseTableList",
      "description": "Return a list containing the rows of Disease Table from start index to end index. It works like as slicing.",
      "rtype": "list",
      "parameters": [
        {
          "name": "start",
          "description": "start index",
          "default":"=0",
          "type": "int"
        },
        {
          "name": "end",
          "description": "end index",
          "default": "=None",
          "type": "int"
        },
        {
          "name": "step",
          "description": "interval index",
          "default": "=1",
          "type": "int"
        }
      ]
    },
    {
      "name": "getGeneTableList",
      "description": "Return a list containing the rows of Gene Table from start index to end index. It works like as slicing.",
      "rtype": "list",
      "parameters": [
        {
          "name": "start",
          "description": "start index",
          "default":"=0",
          "type": "int"
        },
        {
          "name": "end",
          "description": "end index",
          "default": "=None",
          "type": "int"
        },
        {
          "name": "step",
          "description": "interval index",
          "default": "=1",
          "type": "int"
        }
      ]
    },
    {
      "name": "getDistinctGenes",
      "description": "Return a dict with the unique genes present in the gene dataset.",
      "rtype": "dict"
    },
    {
      "name": "getDistinctDiseases",
      "description": "Return a dict with the unique disease present in the disease dataset.",
      "rtype": "dict"
    },
    {
      "name": "getGeneEvidences",
      "description": "Receives as input a geneid or a gene_symbol and returns a dictionary with the sentences that relates the COVID-19 with the gene.",
      "rtype": "dict",
      "parameters": [
        {
          "name": "gene",
          "description": "the geneid or gene_symbol input",
          "type": "str"
        }
      ]
    },
    {
      "name": "getDiseaseEvidences",
      "description": "Receives as input a diseaseID or a disease name and returns a dictionary with the sentences that relates the COVID-19 with the disease.",
      "rtype": "dict",
      "parameters": [
        {
          "name": "disease",
          "description": "The diseaseID or disease name input",
          "type": "str"
        }
      ]
    },
    {
      "name": "getCorrelation",
      "description": "Returns a dict with the correlations between genes and diseases sorted by the highest number of occurrences. It allows to customize the number of correlations to be shown and the minimum occurrence. <br>When called it calls the method <a href='/documentation/functions#correlation_gene_disease'>correlation_gene_disease</a> of the class <a href='/documentation/functions#Testing'>Testing</a> defined in \"functions.py\"",
      "rtype": "dictionary",
      "parameters": [
        {
          "name": "num_rows",
          "description": "shows only this number of correlations",
          "type": "int"
        },
        {
          "name": "min_occurrences",
          "description": "show only the correlations with this minimum occurrences",
          "type": "int"
        }
      ]
    },
    {
      "name": "getDiseasesRelatedToGene",
      "description": "Receives as input a geneID or a gene symbol and returns a dict with the diseases related to the gene.",
      "rtype": "dict",
      "parameters": [
        {
          "name": "gene",
          "description": "geneID or gene_symbol",
          "type": "str"
        }
      ]
    },
    {
      "name": "getGenesRelatedToDisease",
      "description": "Receives as input a diseaseID or a disease name and then returns a dict with the genes related to the disease.",
      "rtype": "dict",
      "parameters": [
        {
          "name": "disease",
          "description": "diseaseID or disease name",
          "type": "str"
        }
      ]
    },
    {
      "name": "getDocumentation",
      "description": "Reads the documentation from .json files and return a dict with the documentation. You can either input the whole path, or the folder and the name of the file. To know more about the format of the documentation read the <a href='/documentation/projectOverview#Documentation'>section</a> dedicated in the Project Overview",
      "rtype": "dictionary",
      "parameters": [
        {
          "name": "path",
          "description": "The path to the file or the path to the folder",
          "type": "str"
        },
        {
          "name": "name_file",
          "default": "",
          "description": "The name of the file. It can be either with extension or without. It's unnecessary if you input the path to the file in 'path'.",
          "type": "str"
        }
      ]
    }
  ]
}
